name: "Run Android Medium test via native"
description: "Run Android Medium test via native."

inputs:
  script:
    description: "script"
    required: true
  android-api-level:
    description: "android-api-level"
    required: true
  android-target:
    description: "android-target"
    required: true
  android-arch:
    description: "android-arch"
    required: true

runs:
  using: "composite"

  steps:
    #    - shell: bash
    #      run: echo $ANDROID_SDK_ROOT
    #      continue-on-error: true
    - shell: bash
      run: ls -al $ANDROID_SDK_ROOT
      continue-on-error: true

    #    - name: "apt update"
    #      run: sudo apt-get update 1> /dev/null
    #      shell: bash
    #
    #    - name: "Install Android SDK"
    #      shell: bash
    #      run: sudo apt-get install android-sdk 1> /dev/null

    #    - shell: bash
    #      run: echo $HOME
    #      continue-on-error: true
    #    - shell: bash
    #      run: echo ${{ env.HOME }}
    #      continue-on-error: true
    #    - shell: bash
    #      run: echo $ANDROID_SDK_ROOT
    #      continue-on-error: true
    #
    #    #    - shell: bash
    #    #      run: ls /usr/lib/android-sdk
    #    #      continue-on-error: true
    #
    #    - name: "set Env $ANDROID_SDK_ROOT"
    #      shell: bash
    #      run: echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
    #    - shell: bash
    #      run: echo $ANDROID_SDK_ROOT
    #      continue-on-error: true
    #    - shell: bash
    #      run: ls -al $ANDROID_SDK_ROOT
    #      continue-on-error: true
    #
    #    - name: "Move for executing without `sudo`"
    #      shell: bash
    #      run: sudo cp -rf /usr/lib/android-sdk ${{ env.ANDROID_SDK_ROOT }}
    #    - shell: bash
    #      run: sudo chown -R $(id -u):$(id -g) ${{ env.ANDROID_SDK_ROOT }}
    #
    #    - name: "Make directory for download"
    #      shell: bash
    #      run: mkdir $HOME/download
    #    - name: "Download Android SDK Command line tools"
    #      shell: bash
    #      run: >
    #        wget
    #        https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
    #        -P $HOME/download
    #        -q
    #    - name: "Make directory for unzip"
    #      shell: bash
    #      run: mkdir $HOME/unzip
    #    - name: "Unzip Android SDK Command line tools"
    #      shell: bash
    #      run: >
    #        unzip
    #        ~/download/commandlinetools-linux-10406996_latest.zip
    #        -d $HOME/unzip
    #        1> /dev/null
    #    - name: "Make directory for android-sdk"
    #      shell: bash
    #      run: mkdir $HOME/.android/cmdline-tools/latest -p
    #    - name: "Move android-sdk"
    #      shell: bash
    #      run: cp -r $HOME/unzip/cmdline-tools/* $HOME/.android/cmdline-tools/latest

    #    - shell: bash
    #      run: ls -al $ANDROID_SDK_ROOT/cmdline-tools
    #      continue-on-error: true
    #    - shell: bash
    #      run: ls -al $ANDROID_SDK_ROOT/cmdline-tools/latest
    #      continue-on-error: true
    #    - shell: bash
    #      run: ls -al $ANDROID_SDK_ROOT/cmdline-tools/latest/bin
    #      continue-on-error: true
    - name: "Add PATH for android-sdk"
      shell: bash
      run: echo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin >> $GITHUB_PATH

    #    # `apt install android-sdk`に`debian`と`29.0.3`が含まれており警告が出力されるため
    #    # 不要そうな`debian`を削除する
    #    - shell: bash
    #      run: rm -rf /home/runner/android-sdk/build-tools/debian

    #    - name: "set Env REPO_OS_OVERRIDE"
    #      shell: bash
    #      run: echo "REPO_OS_OVERRIDE=linux" >> $GITHUB_ENV
    #
    #    - name: "Accept Android SDK licenses"
    #      shell: bash
    #      # FIXME `1> /dev/null`が動いていない
    #      run: yes | sdkmanager --licenses || true 1> /dev/null

    - name: "Install emulator"
      shell: bash
      run: sdkmanager --install emulator
    - name: "Install system images"
      shell: bash
      run: >
        sdkmanager
        --install
        "system-images;android-${{ inputs.android-api-level }};${{ inputs.android-target }};${{ inputs.android-arch}}"
        1> /dev/null

    - name: "Create Android Virtual Device"
      shell: bash
      # 対話形式のようなのでnoで進める
      # Do you wish to create a custom hardware profile? [no]
      run: >
        echo "no" | avdmanager create avd
        --name emulator-5554
        --package "system-images;android-${{ inputs.android-api-level }};${{ inputs.android-target }};${{ inputs.android-arch}}"
        --force

    - shell: bash
      run: ls -al $HOME/.android/avd
      continue-on-error: true

    #    - name: "set Env ANDROID_AVD_HOME"
    #      shell: bash
    #      run: echo "ANDROID_AVD_HOME=/home/runner/.config/.android/avd" >> $GITHUB_ENV

    - shell: bash
      run: ls -al $HOME/.config
      continue-on-error: true
    - shell: bash
      run: ls -al $ANDROID_SDK_ROOT
      continue-on-error: true
    - shell: bash
      run: ls -al $ANDROID_SDK_ROOT/emulator
      continue-on-error: true

    - name: "Install libpulse0"
      shell: bash
      run: sudo apt-get install libpulse0 1> /dev/null
    - name: "Install pulseaudio"
      shell: bash
      run: sudo apt-get install pulseaudio 1> /dev/null

    - shell: bash
      run: ls -al /dev/kvm
      continue-on-error: true

    - name: Enable KVM group perms
      shell: bash
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
      continue-on-error: true

    - shell: bash
      run: sudo gpasswd -a $USER kvm
      continue-on-error: true

    - shell: bash
      run: export QT_DEBUG_PLUGINS=1
      continue-on-error: true
    - shell: bash
      run: sudo apt-get install libxcb-cursor0
      continue-on-error: true
    - shell: bash
      run: sudo apt-get install xcb-cursor0
      continue-on-error: true
    - shell: bash
      run: export LD_LIBRARY_PATH=/path/to/libxcb-cursor0:$LD_LIBRARY_PATH
      continue-on-error: true

    # TODO
    - name: "exec avd"
      run: $ANDROID_SDK_ROOT/emulator/emulator -avd emulator-5554 -no-snapshot
      #    - run: nohup $ANDROID_HOME/emulator/emulator -avd emulator-5554 -no-snapshot > /dev/null 2>&1
      shell: bash
      continue-on-error: true

    - run: echo "dev"
      shell: bash
