name: 'Automated test'
on:
  - push
  - workflow_dispatch
env:
  flutter-version: 3.3.4
  flutter-channel: 'stable'
jobs:
  small_test:
    name: 'Small test'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v3
      - name: 'Install Flutter'
        uses: ./.github/actions/install-flutter
        with:
          version: ${{ env.flutter-version }}
          channel: ${{ env.flutter-channel }}
      - name: 'Build Mocks'
        uses: ./.github/actions/build-mocks
      - name: 'Generate Localization code'
        uses: ./.github/actions/generate-localization_code
      - name: 'Flutter Doctor'
        run: flutter doctor -v
      - run: flutter test --tags Small --coverage
      - name: 'Upload coverage'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: small_test

  integration_test:
    strategy:
      fail-fast: false
      matrix:
        platform: [android, windows]
        include:
          - platform: android
            os: macos-latest
            android-api-level: 30
            android-tag: 'default'
            android-abi: 'x86_64'
            java-distribution: 'temurin'
            java-version: 17
          - platform: windows
            os: windows-latest
    name: 'Integration test(${{ matrix.platform }})'
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v3
      - name: 'Install Flutter'
        uses: ./.github/actions/install-flutter
        with:
          version: ${{ env.flutter-version }}
          channel: ${{ env.flutter-channel }}
      - name: 'Generate Localization code'
        uses: ./.github/actions/generate-localization_code
      - name: 'Prepare Test for Android'
        if: ${{ matrix.platform == 'android' }}
        uses: ./.github/actions/prepare-test_for-android
        with:
          android-api-level: ${{ matrix.android-api-level }}
          android-tag: ${{ matrix.android-tag }}
          android-abi: ${{ matrix.android-abi }}
          android-sdk-root: ${{ matrix.android-sdk-root }}
          java-distribution: ${{ matrix.java-distribution }}
          java-version: ${{ matrix.java-version }}
      - name: 'Flutter doctor'
        run: flutter doctor -v
      - run: flutter test integration_test/app_test.dart -d ${{ matrix.platform }} --coverage
      - name: 'Upload coverage'
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: integration_test-${{ matrix.platform}}
