name: "[EX]Continuous Integration"

on:
  push:

#env:
#  flutter-channel: stable

jobs:
  analyze-code:
    name: Analyze code on ${{ matrix.os }}, ${{ matrix.flutter-channel }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        flutter-channel: [ stable, beta, master]
        analyze-target: [ application, test ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ matrix.flutter-channel }}
          cache: true
#      - name: "Generate Localization code"
#        uses: ./.github/actions/generate-localization_code
      - run: flutter doctor -v
      - name: Analyze Application code
        if: ${{ matrix.analyze-target == 'application' }}
        run: flutter analyze lib
      - name: Build Mocks
        if: ${{ matrix.analyze-target == 'test' }}
        uses: ./.github/actions/build-mocks
      - name: Analyze Test code
        if: ${{ matrix.analyze-target == 'test' }}
        run: flutter analyze test integration_test

  tmp:
    runs-on: macos-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
          cache: 'gradle'
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: stable  # Flutterのバージョンを指定
          cache: true

      - name: "Install dependencies"
        run: flutter pub get

      - name: 'Generate Localization code'
        uses: ./.github/actions/generate-localization_code

      - name: "Build Mocks"
        uses: ./.github/actions/build-mocks

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29-default-x86_64
      - name: Create AVD and generate snapshot for chaching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          profile: Nexus 6
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          emulator-boot-timeout: 1800 # キャッシュが効いていない初回起動のみ必要かもしれない
          disable-linux-hw-accel: true # disableなのでfalseで無効にしないと思ったがdisablingが動いている？
          script: echo "Generated AVD snapshot for caching."

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Run Flutter Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          profile: Nexus 6
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          emulator-boot-timeout: 1800 # キャッシュが効いていない初回起動のみ必要かもしれない
          disable-linux-hw-accel: true # disableなのでfalseで無効にしないと思ったがdisablingが動いている？
          script: flutter test integration_test/app_test.dart --machine  -d android --coverage --dart-define=CICD=true

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: medium_test-android-ex