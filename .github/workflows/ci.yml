name: "[EX]Continuous Integration"

on:
  push:

env:
  flutter-channel: stable

jobs:
  analyze-code:
#  TODO skipを解除する
    if: false # 計算コスト削減のため一時的にskipする
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
#        flutter-channel: [ stable, beta, master]

    name: "Analyze code on ${{ matrix.os }}"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter-channel }}
          cache: true

      - name: "Analyze Application code"
        run: flutter analyze lib

      - name: "Generate Mocks"
        uses: ./.github/actions/build-mocks
      - name: "Analyze Test code"
        run: flutter analyze test integration_test

  small_test:
    name: Small test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter-channel }}
#          channel: ${{ matrix.flutter-channel }}
          cache: true

#      - name: 'Install dependencies'
#        uses: ./.github/actions/install-dependencies
      - name: "Generate Mocks"
        uses: ./.github/actions/build-mocks
#      - name: 'Generate Localization code'
#        uses: ./.github/actions/generate-localization_code

      - name: Run Flutter test
        run: |
          flutter test
          --coverage | tee >(grep "^{" | grep "}$" >temp_report.log)

      - name: Upload coverage
        if: success() || failure()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: small_test-ex
      - name: Report
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
          name: "Medium test(Android)(${{ matrix.android-emulator-runner }})"
          path: 'temp_report.log'
          reporter: 'flutter-json'
          fail-on-error: true

  medium_test-android:
    name: "Medium test(Android)"

    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        # 複数のAndroid Emulator Runnerを使う
        #   パフォーマンスチェックのため
        #   Github actionsの実行時間制限とかが出始めたらやめる
        android-emulator-runner: [ malinskiy, reactivecircus ]

# TODO 画面サイズ
# TODO OSバージョン
# TODO Java distribution
# TODO Java version

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter-channel }}
          cache: true

      - name: 'Generate Localization code'
        uses: ./.github/actions/generate-localization_code

      - name: Run Android Integration Test
        uses: ./.github/actions/set_up-avd
        with:
          method: ${{ matrix.android-emulator-runner }}
          java-distribution: zulu
          java-version: 11
          android-api-level: 29
          android-target: default
          android-arch: x86_64

      - name: "Upload coverage"
        if: success() || failure()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: ex-medium_test-android-${{ matrix.android-emulator-runner }}
      - name: Report
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
          name: "Medium test(Android)(${{ matrix.android-emulator-runner }})"
          path: 'temp_report.log'
          reporter: 'flutter-json'
          fail-on-error: true
