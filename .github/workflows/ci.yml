name: "[EX]Continuous Integration"

on:
  push:

env:
  flutter-channel: stable

jobs:
  analyze-code:
    name: Analyze ${{ matrix.analyze-target }} code on ${{ matrix.os }}, ${{ matrix.flutter-channel }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
#        flutter-channel: [ stable, beta, master]
#        analyze-target: [ application, test ]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter-channel }}
#          channel: ${{ matrix.flutter-channel }}
          cache: true

      - run: flutter doctor -v

      - name: "Analyze Application code"
#        if: ${{ matrix.analyze-target == 'application' }}
        run: flutter analyze lib

      - name: "Generate Mocks"
#        if: ${{ matrix.analyze-target == 'test' }}
        uses: ./.github/actions/build-mocks
      - name: "Analyze Test code"
#        if: ${{ matrix.analyze-target == 'test' }}
        run: flutter analyze test integration_test

  medium_test-android:
    name: "Medium test(Android)"

    runs-on: macos-latest

#    strategy:
#      fail-fast: false
#      matrix:
# TODO 複数のAndroid Emulator Runnerを使う
#   - malinskiy/action-android
#   - reactivecircus/android-emulator-runner
#   パフォーマンスチェックのため
#   Github actionsの実行時間制限とかが出始めたらやめる
#        android-emulator-runner: [ malinskiy, reactivecircus ]

# TODO 画面サイズ
# TODO OSバージョン
# TODO Java distribution
# TODO Java version

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          cache: 'gradle'
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: "Set up Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter-channel }}
          cache: true

      - name: 'Generate Localization code'
        uses: ./.github/actions/generate-localization_code

      - name: "AVD cache"
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-29-default-x86_64
      - name: "Create AVD and generate snapshot for chaching"
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          profile: Nexus 6
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: "Run Flutter Tests"
        id: test-execution
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          profile: Nexus 6
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            bash ./scripts/integration_test.sh "emulator-5554"
#          script: flutter test integration_test/app_test.dart --machine  -d android --coverage --dart-define=CICD=true | tee >(grep "^{" | grep "}$" > temp_report.log)

      - name: "Upload coverage"
        if: success() || failure()
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: medium_test-android-ex

      - name: Report
        if: success() || failure()
        uses: dorny/test-reporter@v1
        with:
#          name: '${{ matrix.api-level }}-${{ matrix.target }}-${{ matrix.arch }}'
          name: 'test report'
          path: 'temp_report.log'
          reporter: 'flutter-json'
          fail-on-error: 'false'
